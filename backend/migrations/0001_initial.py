# Generated by Django 5.2.1 on 2025-05-15 15:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(db_column='CATEGORY_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'CATEGORY',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('profile_picture', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'USER',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(db_column='COMMENT_ID', primary_key=True, serialize=False)),
                ('content', models.TextField(db_column='CONTENT')),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'COMMENT',
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('playlist_id', models.AutoField(db_column='PLAYLIST_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=100)),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PLAYLIST',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('subscription_id', models.AutoField(db_column='SUBSCRIPTION_ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('channel', models.ForeignKey(db_column='CHANNEL_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='subscription_channel_set', to=settings.AUTH_USER_MODEL)),
                ('subscriber', models.ForeignKey(db_column='SUBSCRIBER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'SUBSCRIPTION',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_id', models.AutoField(db_column='VIDEO_ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='TITLE', max_length=255)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('file_url', models.CharField(db_column='FILE_URL', max_length=255)),
                ('thumbnail_url', models.CharField(db_column='THUMBNAIL_URL', max_length=255)),
                ('views', models.IntegerField(blank=True, db_column='VIEWS', null=True)),
                ('duration', models.FloatField(db_column='DURATION')),
                ('is_public', models.BooleanField(blank=True, db_column='IS_PUBLIC', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'VIDEO',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(db_column='REPORT_ID', primary_key=True, serialize=False)),
                ('reason', models.TextField(db_column='REASON')),
                ('status', models.CharField(blank=True, db_column='STATUS', max_length=20, null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('comment', models.ForeignKey(blank=True, db_column='COMMENT_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.comment')),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(blank=True, db_column='VIDEO_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video')),
            ],
            options={
                'db_table': 'REPORT',
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('reaction_id', models.AutoField(db_column='REACTION_ID', primary_key=True, serialize=False)),
                ('type', models.CharField(db_column='TYPE', max_length=20)),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(db_column='VIDEO_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video')),
            ],
            options={
                'db_table': 'REACTION',
            },
        ),
        migrations.CreateModel(
            name='PlaylistVideo',
            fields=[
                ('playlist_video_id', models.AutoField(db_column='PLAYLIST_VIDEO_ID', primary_key=True, serialize=False)),
                ('playlist', models.ForeignKey(db_column='PLAYLIST_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.playlist')),
                ('video', models.ForeignKey(db_column='VIDEO_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video')),
            ],
            options={
                'db_table': 'PLAYLIST_VIDEO',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='video',
            field=models.ForeignKey(db_column='VIDEO_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video'),
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('advertisement_id', models.AutoField(db_column='ADVERTISEMENT_ID', primary_key=True, serialize=False)),
                ('ad_url', models.CharField(db_column='AD_URL', max_length=255)),
                ('clicks', models.IntegerField(blank=True, db_column='CLICKS', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='CREATED_AT', null=True)),
                ('video', models.ForeignKey(db_column='VIDEO_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video')),
            ],
            options={
                'db_table': 'ADVERTISEMENT',
            },
        ),
        migrations.CreateModel(
            name='VideoCategory',
            fields=[
                ('video_category_id', models.AutoField(db_column='VIDEO_CATEGORY_ID', primary_key=True, serialize=False)),
                ('category', models.ForeignKey(db_column='CATEGORY_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.category')),
                ('video', models.ForeignKey(db_column='VIDEO_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video')),
            ],
            options={
                'db_table': 'VIDEO_CATEGORY',
            },
        ),
        migrations.CreateModel(
            name='WatchHistory',
            fields=[
                ('watch_history_id', models.AutoField(db_column='WATCH_HISTORY_ID', primary_key=True, serialize=False)),
                ('watched_at', models.DateTimeField(blank=True, db_column='WATCHED_AT', null=True)),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(db_column='VIDEO_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.video')),
            ],
            options={
                'db_table': 'WATCH_HISTORY',
            },
        ),
    ]
